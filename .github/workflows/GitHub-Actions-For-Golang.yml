name: GitHub-Actions-For-Golang
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  ci-stage:
    #runs-on: ubuntu-latest
    runs-on: own-runner
    env:
      GO111MODULE: on
      # disabled cgo for airPine
      CGO_ENABLED: 0
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.29

      - name: Run Gosec Security Scanner
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          go get github.com/securego/gosec/cmd/gosec
          gosec ./...

      - name: Test
        run: go test -v ./...

      - name: Build
        run: go build -v ./...

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: pooncheebean/testgithubaction:latest

      - name: create json
        run: echo '{"name":"Jack"}' > annotations.json

      - name: Annotate
        uses: Attest/annotations-action@v0.1.0
        with:
          token: ${{ secrets.MY_TOKEN }}
          input: './annotations.json'
          title: 'Annotate Files'
#- name: Deploy to Kubernetes
#  run: kubectl apply -f app.yaml